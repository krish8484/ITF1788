language: python

python:
  - "3.4"
#  - "3.5"
#  - "3.5-dev" # 3.5 development branch
#  - "nightly" # currently points to 3.6-dev

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - libmpfr-dev

env:
 - PLUGIN=of-interval
 - PLUGIN=ValidatedNumerics.jl
 - PLUGIN=C-XSC
 - PLUGIN=Gaol
 - PLUGIN=libieeep1788
 - PLUGIN=Ibex
 - PLUGIN=pyIbex

before_install:
 - if [ $PLUGIN == of-interval ]; then          sudo add-apt-repository --yes ppa:octave/stable; fi
 - if [ $PLUGIN == of-interval ]; then          sudo apt-get update -qq; fi
 - if [ $PLUGIN == of-interval ]; then          sudo apt-get install -qq octave liboctave-dev libmpfr-dev; fi
 - if [ $PLUGIN == ValidatedNumerics.jl ]; then sudo add-apt-repository --yes ppa:staticfloat/juliareleases; fi
 - if [ $PLUGIN == ValidatedNumerics.jl ]; then sudo add-apt-repository --yes ppa:staticfloat/julia-deps; fi
 - if [ $PLUGIN == ValidatedNumerics.jl ]; then sudo apt-get update -qq; fi
 - if [ $PLUGIN == ValidatedNumerics.jl ]; then sudo apt-get install -qq julia; fi
 - if [ $PLUGIN == libieeep1788 ]; then         sudo apt-get install -qq g++-4.8 libboost-test-dev; fi
 - if [ $PLUGIN == libieeep1788 ]; then         wget -q --output-document=libieeep1788-master.zip "https://github.com/nehmeier/libieeep1788/archive/master.zip"; fi
 - if [ $PLUGIN == libieeep1788 ]; then         unzip -qq libieeep1788-master.zip; fi
                                                # It is faster to not compile the examples and tests
 - if [ $PLUGIN == libieeep1788 ]; then         sed -i -e "s#add_subdirectory(examples)##" libieeep1788-master/CMakeLists.txt; fi
 - if [ $PLUGIN == libieeep1788 ]; then         sed -i -e "s#add_subdirectory(test)##" libieeep1788-master/CMakeLists.txt; fi
                                                # Dependencies have different version numbers than Travis provides
 - if [ $PLUGIN == libieeep1788 ]; then         sed -i -e "s#MPFR 3.1.2#MPFR 3.1.0#" libieeep1788-master/CMakeLists.txt; fi
 - if [ $PLUGIN == libieeep1788 ]; then         sed -i -e "s#GMP 6.0.0#GMP ..#" libieeep1788-master/CMakeLists.txt; fi
 - if [ $PLUGIN == C-XSC ]; then                sudo apt-get install -qq libboost-test-dev; fi
 - if [ $PLUGIN == C-XSC ]; then                wget -q "http://www2.math.uni-wuppertal.de/~xsc/xsc/cxsc/cxsc-2-5-4.tar.gz"; fi
 - if [ $PLUGIN == C-XSC ]; then                tar xzf cxsc-*.tar.gz && mv cxsc-*/ cxsc; fi
                                                # It is faster to not compile the examples and tests
 - if [ $PLUGIN == C-XSC ]; then                sed -i -e "s#add_subdirectory(examples)##" cxsc/CMakeLists.txt; fi
 - if [ $PLUGIN == C-XSC ]; then                sed -i -e "s#add_subdirectory(CToolbox/Programs)##" cxsc/CMakeLists.txt; fi
 - if [ $PLUGIN == C-XSC ]; then                sed -i -e "s#add_subdirectory(CToolbox/test)##" cxsc/CMakeLists.txt; fi
 - if [ $PLUGIN == C-XSC ]; then                sed -i -e "s#add_subdirectory(CToolbox/test/test_programms)##" cxsc/CMakeLists.txt; fi
 - if [ $PLUGIN == Gaol ]; then                 sudo apt-get install -qq libboost-test-dev; fi
 - if [ $PLUGIN == Gaol ]; then                 wget -q "http://lipforge.ens-lyon.fr/frs/download.php/162/crlibm-1.0beta4.tar.gz"; fi
 - if [ $PLUGIN == Gaol ]; then                 tar xzf crlibm-*.tar.gz && mv crlibm-*/ crlibm; fi
 - if [ $PLUGIN == Gaol ]; then                 wget -q --output-document=gaol.tar.gz "https://sourceforge.net/projects/gaol/files/latest/download"; fi
 - if [ $PLUGIN == Gaol ]; then                 tar xzf gaol.tar.gz && mv gaol-*/ gaol; fi
 - if [ $PLUGIN == Ibex ]; then                 sudo apt-get install -qq libboost-test-dev; fi
 - if [ $PLUGIN == Ibex ]; then                 wget -q -U ITF1788 "http://www.ensta-bretagne.fr/lebars/Share/ibex-2.1.10_qtsdk2010.05_saltp6-l_64_bin.zip"; fi
 - if [ $PLUGIN == Ibex ]; then                 unzip -q ibex-*.zip && mv ibex-*/ ibex_bin; fi
                                                # pyIbex needs this particular libboost_python 1.55.0 for python 3.4
 - if [ $PLUGIN == pyIbex ]; then               wget http://mirrors.kernel.org/ubuntu/pool/main/b/boost1.55/libboost-python1.55.0_1.55.0+dfsg-3ubuntu2_amd64.deb; fi
 - if [ $PLUGIN == pyIbex ]; then               sudo dpkg -i libboost-python*.deb; fi
                                                # There is no pip installable wheel for GNU/Linux yet
 - if [ $PLUGIN == pyIbex ]; then               wget "http://exp.ln0.de/pyIbex-1.1.3-cp34-cp34m-linux_x86_64.whl"; fi

install:
 - pip install .
 - export LD_LIBRARY_PATH="/usr/local/lib"
 - if [ $PLUGIN == of-interval ]; then          octave -q --no-gui --eval "pkg install -forge interval"; fi
 - if [ $PLUGIN == ValidatedNumerics.jl ]; then julia -q --eval "Pkg.clone(\"https://github.com/dpsanders/ValidatedNumerics.jl\")"; fi
                                                # We need stdc++11 for compilation of libieeep1788
 - if [ $PLUGIN == libieeep1788 ]; then         export CC="gcc-4.8"; export CXX="g++-4.8"; fi
 - if [ $PLUGIN == libieeep1788 ]; then         mkdir -p libieeep1788-master/build && (cd libieeep1788-master/build; cmake ..) && make -C libieeep1788-master/build; fi
 - if [ $PLUGIN == libieeep1788 ]; then         sudo make -C libieeep1788-master/build install; fi
 - if [ $PLUGIN == C-XSC ]; then                mkdir -p cxsc/build && (cd cxsc/build; cmake ..) && make -C cxsc/build; fi
 - if [ $PLUGIN == C-XSC ]; then                sudo make -C cxsc/build install; fi
                                                # Gaol demands SSE3 for compilation
 - if [ $PLUGIN == Gaol ]; then                 export CC="gcc -msse3"; export CXX="g++ -msse3"; fi
 - if [ $PLUGIN == Gaol ]; then                 (cd crlibm && ./configure && make); fi
 - if [ $PLUGIN == Gaol ]; then                 sudo make -C crlibm install; fi
 - if [ $PLUGIN == Gaol ]; then                 (cd gaol && ./configure --with-mathlib=crlibm --enable-relations=set && make); fi
 - if [ $PLUGIN == Gaol ]; then                 sudo make -C gaol install; fi
 - if [ $PLUGIN == Ibex ]; then                 (cd ibex_bin && sudo cp -rf ibex/* soplex/lib /usr/local/); fi
 - if [ $PLUGIN == Ibex ]; then                 (cd ibex_bin && sudo cp -rf soplex/src/*.h /usr/local/include/); fi
 - if [ $PLUGIN == pyIbex ]; then               pip install pyIbex-*.whl; fi

script:
 - if [ $PLUGIN == of-interval ]; then          python3 -m itf1788 -s itl -o output -c "(octave, *, interval)"; fi
 - if [ $PLUGIN == of-interval ]; then          make -C output/octave/*/interval; fi
 - if [ $PLUGIN == ValidatedNumerics.jl ]; then python3 -m itf1788 -s itl -o output -c "(julia, Base.Test, *)"; fi
 - if [ $PLUGIN == ValidatedNumerics.jl ]; then make -C output/julia/Base.Test/*; fi
 - if [ $PLUGIN == libieeep1788 ]; then         python3 -m itf1788 -s itl -o output -c "(cpp, *, libieeep1788)"; fi
 - if [ $PLUGIN == libieeep1788 ]; then         make -C output/*/*/libieeep1788; fi
 - if [ $PLUGIN == C-XSC ]; then                python3 -m itf1788 -s itl -o output -c "(cpp, *, cxsc)"; fi
 - if [ $PLUGIN == C-XSC ]; then                make -C output/*/*/cxsc; fi
 - if [ $PLUGIN == Gaol ]; then                 python3 -m itf1788 -s itl -o output -c "(cpp, *, gaol)"; fi
 - if [ $PLUGIN == Gaol ]; then                 make -C output/*/*/gaol; fi
 - if [ $PLUGIN == Ibex ]; then                 python3 -m itf1788 -s itl -o output -c "(cpp, *, ibex)"; fi
 - if [ $PLUGIN == Ibex ]; then                 make -C output/*/*/ibex; fi
 - if [ $PLUGIN == pyIbex ]; then               python3 -m itf1788 -s itl -o output -c "(python, *, pyIbex)"; fi
 - if [ $PLUGIN == pyIbex ]; then               make -C output/*/*/pyIbex; fi
